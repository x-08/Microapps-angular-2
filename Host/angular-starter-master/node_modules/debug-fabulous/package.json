{
  "_args": [
    [
      {
        "raw": "debug-fabulous@0.1.X",
        "scope": null,
        "escapedName": "debug-fabulous",
        "name": "debug-fabulous",
        "rawSpec": "0.1.X",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\x\\Desktop\\ng2Starter\\angular-starter-master (1)\\angular-starter-master\\node_modules\\gulp-sourcemaps"
    ]
  ],
  "_from": "debug-fabulous@>=0.1.0 <0.2.0",
  "_id": "debug-fabulous@0.1.0",
  "_inCache": true,
  "_location": "/debug-fabulous",
  "_nodeVersion": "4.8.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/debug-fabulous-0.1.0.tgz_1490974539088_0.04610411426983774"
  },
  "_npmUser": {
    "name": "nmccready",
    "email": "nemtcan@gmail.com"
  },
  "_npmVersion": "4.4.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "debug-fabulous@0.1.X",
    "scope": null,
    "escapedName": "debug-fabulous",
    "name": "debug-fabulous",
    "rawSpec": "0.1.X",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp-sourcemaps"
  ],
  "_resolved": "https://registry.npmjs.org/debug-fabulous/-/debug-fabulous-0.1.0.tgz",
  "_shasum": "ad0ea07a5d519324fb55842a8f34ee59c7f8ff6c",
  "_shrinkwrap": null,
  "_spec": "debug-fabulous@0.1.X",
  "_where": "C:\\Users\\x\\Desktop\\ng2Starter\\angular-starter-master (1)\\angular-starter-master\\node_modules\\gulp-sourcemaps",
  "author": {
    "name": "Nicholas McCready"
  },
  "dependencies": {
    "debug": "2.X",
    "object-assign": "4.1.0"
  },
  "description": "visionmedia debug extensions rolled into one",
  "devDependencies": {
    "babel-eslint": "7.X",
    "chai": "3.X",
    "eslint": "3.X",
    "hook-std": "0.X",
    "mocha": "3.X"
  },
  "directories": {},
  "dist": {
    "shasum": "ad0ea07a5d519324fb55842a8f34ee59c7f8ff6c",
    "tarball": "https://registry.npmjs.org/debug-fabulous/-/debug-fabulous-0.1.0.tgz"
  },
  "gitHead": "c1d34dd89039823fb0ac4a0dac81672ff48b8cf1",
  "keywords": [
    "debug",
    "lazy",
    "lazy-eval"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "nmccready",
      "email": "nemtcan@gmail.com"
    }
  ],
  "name": "debug-fabulous",
  "optionalDependencies": {},
  "readme": "# debug-fabulous\n\n## Install\n`npm install --save debug-fabulous`\n\n# Purpose\n\nWrapper / Extension around [visionmedia's debug](https://github.com/visionmedia/debug) to allow lazy evaluation of debugging via closure handling.\n\nThis library essentially wraps two things:\n\n- [lazy-eval](./src/lazy-eval.js): debug closure handling\n- [spawn](./src/spawn.js): spawns off existing namespaces for a sub namespace.\n\n\n## Example:\n\nFor usage see the [tests](./test) or the example below.\n\n```js\nvar debug = require('')();\n// force namespace to be enabled otherwise it assumes process.env.DEBUG is setup\n// debug.save('namespace');\n// debug.enable(debug.load())\ndebug = debug('namespace'); // debugger in the namespace\ndebug(function(){return 'ya something to log' + someLargeHarryString;});\ndebug('small out'); // prints namespace small out\nvar childDbg = debug.spawn('child'); // debugger in the namespace:child\nchildDbg('small out'); // prints namespace:child small out\nvar grandChildDbg = debug.spawn('grandChild'); // debugger in the namespace:child:grandChild\ngrandChildDbg('small out'); // prints namespace:child:grandChild small out\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "http://www.github.com/nmccready/debug-fabulous"
  },
  "scripts": {
    "mocha": "mocha $@",
    "test": "mocha ./test/**/*test.js ./test/*.test.js"
  },
  "version": "0.1.0"
}
