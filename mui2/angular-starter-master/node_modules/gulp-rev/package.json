{
  "_args": [
    [
      {
        "raw": "gulp-rev@^7.1.2",
        "scope": null,
        "escapedName": "gulp-rev",
        "name": "gulp-rev",
        "rawSpec": "^7.1.2",
        "spec": ">=7.1.2 <8.0.0",
        "type": "range"
      },
      "C:\\Users\\x\\Desktop\\ng2Starter\\angular-starter-master (1)\\angular-starter-master"
    ]
  ],
  "_from": "gulp-rev@>=7.1.2 <8.0.0",
  "_id": "gulp-rev@7.1.2",
  "_inCache": true,
  "_location": "/gulp-rev",
  "_nodeVersion": "4.4.5",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/gulp-rev-7.1.2.tgz_1471045668864_0.0013231236953288317"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-rev@^7.1.2",
    "scope": null,
    "escapedName": "gulp-rev",
    "name": "gulp-rev",
    "rawSpec": "^7.1.2",
    "spec": ">=7.1.2 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-rev/-/gulp-rev-7.1.2.tgz",
  "_shasum": "5e17cc229f6b45c74256f88ad3f2d3e9a3305829",
  "_shrinkwrap": null,
  "_spec": "gulp-rev@^7.1.2",
  "_where": "C:\\Users\\x\\Desktop\\ng2Starter\\angular-starter-master (1)\\angular-starter-master",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/gulp-rev/issues"
  },
  "dependencies": {
    "gulp-util": "^3.0.0",
    "modify-filename": "^1.1.0",
    "object-assign": "^4.0.1",
    "rev-hash": "^1.0.0",
    "rev-path": "^1.0.0",
    "sort-keys": "^1.0.0",
    "through2": "^2.0.0",
    "vinyl-file": "^1.1.0"
  },
  "description": "Static asset revisioning by appending content hash to filenames: unicorn.css => unicorn-d41d8cd98f.css",
  "devDependencies": {
    "mocha": "*",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "5e17cc229f6b45c74256f88ad3f2d3e9a3305829",
    "tarball": "https://registry.npmjs.org/gulp-rev/-/gulp-rev-7.1.2.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "e895123b92f4a39fcf6a3f37dbdd78bc6f93c0c5",
  "homepage": "https://github.com/sindresorhus/gulp-rev#readme",
  "keywords": [
    "gulpplugin",
    "rev",
    "revving",
    "revision",
    "hash",
    "optimize",
    "version",
    "versioning",
    "cache",
    "expire",
    "static",
    "asset",
    "assets"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "Justin Hileman",
      "email": "justin@justinhileman.info",
      "url": "justinhileman.info"
    },
    {
      "name": "Ben Bieler",
      "email": "benjaminbieler2014@gmail.com",
      "url": "https://twitter.com/BenBieler"
    },
    {
      "name": "Tim Costa",
      "url": "https://github.com/tjsail33"
    },
    {
      "name": "Raja Sekar",
      "email": "rajasekar89be@gmail.com",
      "url": "https://github.com/rajzshkr"
    },
    {
      "name": "Ajay Balachandran",
      "url": "http://www.ajaybalachandran.com/"
    }
  ],
  "name": "gulp-rev",
  "optionalDependencies": {},
  "readme": "# gulp-rev [![Build Status](https://travis-ci.org/sindresorhus/gulp-rev.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-rev) [![Gitter](https://badges.gitter.im/join_chat.svg)](https://gitter.im/sindresorhus/gulp-rev)\n\n> Static asset revisioning by appending content hash to filenames\n> `unicorn.css` â†’ `unicorn-d41d8cd98f.css`\n\nMake sure to set the files to [never expire](http://developer.yahoo.com/performance/rules.html#expires) for this to have an effect.\n\n---\n\n<p align=\"center\"><b>ðŸ”¥ Want to strengthen your core JavaScript skills and master ES6?</b><br>I would personally recommend this awesome <a href=\"https://ES6.io/friend/AWESOME\">ES6 course</a> by Wes Bos.</p>\n\n---\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-rev\n```\n\n\n## Usage\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\treturn gulp.src('src/*.css')\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('dist'));\n});\n```\n\n\n## API\n\n### rev()\n\n### rev.manifest([path], [options])\n\n#### path\n\nType: `string`\nDefault: `\"rev-manifest.json\"`\n\nManifest file path.\n\n#### options\n\n##### base\n\nType: `string`\nDefault: `process.cwd()`\n\nOverride the `base` of the manifest file.\n\n##### cwd\n\nType: `string`\nDefault: `process.cwd()`\n\nOverride the `cwd` (current working directory) of the manifest file.\n\n##### merge\n\nType: `boolean`\nDefault: `false`\n\nMerge existing manifest file.\n\n##### transformer\n\nType: `object`\nDefault: `JSON`\n\nAn object with `parse` and `stringify` methods. This can be used to provide a\ncustom transformer instead of the default `JSON` for the manifest file.\n\n\n### Original path\n\nOriginal file paths are stored at `file.revOrigPath`. This could come in handy for things like rewriting references to the assets.\n\n\n### Asset hash\n\nThe hash of each rev'd file is stored at `file.revHash`. You can use this for customizing the file renaming, or for building different manifest formats.\n\n\n### Asset manifest\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\t// by default, gulp would pick `assets/css` as the base,\n\t// so we need to set it explicitly:\n\treturn gulp.src(['assets/css/*.css', 'assets/js/*.js'], {base: 'assets'})\n\t\t.pipe(gulp.dest('build/assets'))  // copy original assets to build dir\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('build/assets'))  // write rev'd assets to build dir\n\t\t.pipe(rev.manifest())\n\t\t.pipe(gulp.dest('build/assets')); // write manifest to build dir\n});\n```\n\nAn asset manifest, mapping the original paths to the revisioned paths, will be written to `build/assets/rev-manifest.json`:\n\n```json\n{\n\t\"css/unicorn.css\": \"css/unicorn-d41d8cd98f.css\",\n\t\"js/unicorn.js\": \"js/unicorn-273c2cin3f.js\"\n}\n```\n\nBy default, `rev-manifest.json` will be replaced as a whole. To merge with an existing manifest, pass `merge: true` and the output destination (as `base`) to `rev.manifest()`:\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\t// by default, gulp would pick `assets/css` as the base,\n\t// so we need to set it explicitly:\n\treturn gulp.src(['assets/css/*.css', 'assets/js/*.js'], {base: 'assets'})\n\t\t.pipe(gulp.dest('build/assets'))\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('build/assets'))\n\t\t.pipe(rev.manifest({\n\t\t\tbase: 'build/assets',\n\t\t\tmerge: true // merge with the existing manifest (if one exists)\n\t\t}))\n\t\t.pipe(gulp.dest('build/assets'));\n});\n```\n\nYou can optionally call `rev.manifest('manifest.json')` to give it a different path or filename.\n\n\n## Sourcemaps and `gulp-concat`\n\nBecause of the way `gulp-concat` handles file paths, you may need to set `cwd` and `path` manually on your `gulp-concat` instance to get everything to work correctly:\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\nvar sourcemaps = require('gulp-sourcemaps');\nvar concat = require('gulp-concat');\n\ngulp.task('default', function () {\n\treturn gulp.src('src/*.js')\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(concat({path: 'bundle.js', cwd: ''}))\n\t\t.pipe(rev())\n\t\t.pipe(sourcemaps.write('.'))\n\t\t.pipe(gulp.dest('dist'));\n```\n\n\n## Streaming\n\nThis plugin does not support streaming. If you have files from a streaming source, such as browserify, you should use [gulp-buffer](https://github.com/jeromew/gulp-buffer) before `gulp-rev` in your pipeline:\n\n```js\nvar gulp = require('gulp');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\nvar buffer = require('gulp-buffer');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\treturn browserify('src/index.js')\n\t\t.bundle({debug: true})\n\t\t.pipe(source('index.min.js'))\n\t\t.pipe(buffer())\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('dist'))\n});\n```\n\n\n## Integration\n\nFor more info on how to integrate **gulp-rev** into your app, have a look at the [integration guide](integration.md).\n\n\n## Works with gulp-rev\n\n- [gulp-rev-replace](https://github.com/jamesknelson/gulp-rev-replace) - Rewrite occurences of filenames which have been renamed\n- [gulp-rev-css-url](https://github.com/galkinrost/gulp-rev-css-url) - Override URLs in CSS files with the revved ones\n- [gulp-rev-outdated](https://github.com/shonny-ua/gulp-rev-outdated) - Old static asset revision files filter\n- [gulp-rev-collector](https://github.com/shonny-ua/gulp-rev-collector) - Static asset revision data collector\n- [rev-del](https://github.com/callumacrae/rev-del) - Delete old unused assets\n- [gulp-rev-delete-original](https://github.com/nib-health-funds/gulp-rev-delete-original) - Delete original files after rev\n- [gulp-rev-loader](https://github.com/adjavaherian/gulp-rev-loader) - Use rev-manifest with webpack\n- [gulp-rev-format](https://github.com/atamas101/gulp-rev-format) - Provide hash formatting options for static assets (prefix, suffix, last-extension)\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/gulp-rev.git"
  },
  "scripts": {
    "test": "xo && mocha"
  },
  "version": "7.1.2",
  "xo": {
    "envs": [
      "node",
      "mocha"
    ]
  }
}
